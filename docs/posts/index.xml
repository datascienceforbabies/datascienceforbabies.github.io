<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Data Science for Babies</title>
        <link>http://datascienceforbabies.com/posts/</link>
        <description>Recent content in Posts on Data Science for Babies</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sun, 13 Nov 2022 11:39:45 -0500</lastBuildDate>
        <atom:link href="http://datascienceforbabies.com/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Buzzwords</title>
            <link>http://datascienceforbabies.com/posts/buzzwords/</link>
            <pubDate>Sun, 13 Nov 2022 11:39:45 -0500</pubDate>
            
            <guid>http://datascienceforbabies.com/posts/buzzwords/</guid>
            <description>In this article, we&amp;rsquo;ll keep a running list of data science buzzwords and jargon that we&amp;rsquo;ll define in simple terms.
Distribution
Algorithm
AI
Machine Learning
Regression
Classification
Optimization</description>
            <content type="html"><![CDATA[<p>In this article, we&rsquo;ll keep a running list of data science buzzwords and jargon that we&rsquo;ll define in simple terms.</p>
<p>Distribution</p>
<p>Algorithm</p>
<p>AI</p>
<p>Machine Learning</p>
<p>Regression</p>
<p>Classification</p>
<p>Optimization</p>
]]></content>
        </item>
        
        <item>
            <title>Examplepost</title>
            <link>http://datascienceforbabies.com/posts/examplepost/</link>
            <pubDate>Fri, 11 Nov 2022 12:10:00 -0500</pubDate>
            
            <guid>http://datascienceforbabies.com/posts/examplepost/</guid>
            <description>Hello! Here is the first ever post on datascienceforbabies.com!!
Above is a test of inserting an image.
# break dataframes into test and training - this way the test data is completely new (80/20 split) aqu_train = aqu.sample(frac=0.8, random_state=25) aqu_test = aqu.drop(aqu_train.index) bel_train = bel.sample(frac=0.8, random_state=25) bel_test = bel.drop(bel_train.index) sar_train = sar.sample(frac=.8, random_state=25) sar_test = sar.drop(sar_train.index) Above is a test of inserting code.
- numpy- matplotlibpyscript REPL (numpy and matplotlib are installed)import numpy as npfrom matplotlib import pyplot as pltprint(&#34;</description>
            <content type="html"><![CDATA[<p>Hello! Here is the first ever post on datascienceforbabies.com!!</p>
<p><img src="/pexels-photo-268533.webp" alt="Yellow Duck" title="Yellow Duck"></p>
<p>Above is a test of inserting an image.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>  # break dataframes into test and training - this way the test data is completely new (80/20 split)
</span></span><span style="display:flex;"><span>  aqu_train =  aqu.sample(frac=0.8, random_state=25)
</span></span><span style="display:flex;"><span>  aqu_test = aqu.drop(aqu_train.index)
</span></span><span style="display:flex;"><span>  bel_train = bel.sample(frac=0.8, random_state=25)
</span></span><span style="display:flex;"><span>  bel_test = bel.drop(bel_train.index)
</span></span><span style="display:flex;"><span>  sar_train = sar.sample(frac=.8, random_state=25)
</span></span><span style="display:flex;"><span>  sar_test = sar.drop(sar_train.index)
</span></span></code></pre></div><p>Above is a test of inserting code.</p>
<script defer src="https://pyscript.net/alpha/pyscript.js"></script>
<link rel="stylesheet" href="https://raw.githubusercontent.com/Cat-Computing-Universe/PyLab/main/demo/demo.css" />
<script src="https://code.jquery.com/jquery-3.5.0.js"></script>
<py-env>
  - numpy
  - matplotlib
</py-env>
<b>pyscript REPL (numpy and matplotlib are installed)</b>
<br>
<div>
  <div>
    <py-repl id="my-repl" auto-generate="true" std-out="output" std-err="output">
import numpy as np
from matplotlib import pyplot as plt
print("Hello, world!")
    </py-repl>
  </div>
  <div style="justify-content: right;display: flex;align-items: right;">
    <button class="button_reset" type="button">Clear Output</button>
  </div>
  <b>Output:</b>
  <div style="justify-content: center;display: flex;align-items: center;">
    <div id="output" style="width: 100%;margin: 2rem;"></div>
  </div>
  <script src="https://raw.githubusercontent.com/Cat-Computing-Universe/PyLab/main/demo/demo.js"></script>
</div>
<p>Above is a test of inserting runnable code.</p>
]]></content>
        </item>
        
    </channel>
</rss>
